# Settings for development. Default to insecure (but fine for development) credentials to save setup time

services:
  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - caddy_data:/data
      # - ./certs:/certs
    restart: unless-stopped
    logging:
      driver: none
  db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASS:-crowdcaptions}
      POSTGRES_DB: ${POSTGRES_DB:-crowdcaptions}
      POSTGRES_USER: ${POSTGRES_PASS:-crowdcaptions}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - dbnet
    ports:
      - 5432:5432

  backend:
    environment:
      NODE_ENV: development
      PORT: ${PORT:-8000}
      POSTGRES_DB: ${POSTGRES_DB:-crowdcaptions}
      POSTGRES_USER: ${POSTGRES_PASS:-crowdcaptions}
      POSTGRES_PASS: ${POSTGRES_PASS:-crowdcaptions}
      POSTGRES_HOST: ${POSTGRES_HOST:-db}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      panopto_host: ${panopto_host}
      panopto_username: ${panopto_username}
      panopto_password: ${panopto_password}
      panopto_clientId: ${panopto_clientId}
      panopto_clientSecret: ${panopto_clientSecret}
    ports:
      # Only debug ports
      - 9229:9229
      - 9230:9230
    depends_on:
      - db
    networks:
      - caddy
      - dbnet
    labels:
      caddy: localhost
      caddy.reverse_proxy: "{{upstreams 8000}}"

volumes:
  db-data:
  caddy_data: {}

networks:
  caddy:
    external: true
  dbnet:
